version: '3.7'

services:
  # TODO: remove before deploy on heroku
  ngrok:
    container_name: sws_ngrok
    image: wernight/ngrok
    env_file:
      - .env
    environment:
      - NGROK_PORT=collector:${COLLECTOR_PORT}
    ports:
      - 4040:4040
    restart: always

  postgres:
    image: postgres:10
    container_name: sws_postgres
    working_dir: /docker-entrypoint-initdb.d
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT:-5432}
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d/
      - postgres-data:/var/lib/postgresql/data/
    restart: always

  redis:
    image: redis:5
    container_name: sws_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT:-6379}
    env_file:
      - .env
    depends_on:
      - postgres
    restart: always

  collector:
    container_name: sws_collector
    build: ./collector
    command: python /collector/app/main.py
    env_file:
      - .env
    volumes:
      - ./collector:/collector
      - /var/log/sws/collector.log:/var/log/sws/collector.log
    depends_on:
      - postgres
      - redis
    ports:
      - ${COLLECTOR_PORT:-5010}:${COLLECTOR_PORT:-5010}
    restart: always

  server:
    container_name: sws_server
    build: ./server
    command: python /server/app/main.py
    env_file:
      - .env
    volumes:
      - ./server:/server
      - /var/log/sws/server.log:/var/log/sws/server.log
    depends_on:
      - postgres
      - redis
      - ngrok
    ports:
      - ${SERVER_PORT:-5000}:${SERVER_PORT:-5000}
    restart: always

  telegram:
    container_name: sws_telegram
    build: ./telegram
    command: python /telegram/app/main.py
    env_file:
      - .env
    volumes:
      - ./telegram:/telegram
      - /var/log/sws/telegram.log:/var/log/sws/telegram.log
    depends_on:
      - postgres
      - redis
      - server
    restart: always

  tasker:
    container_name: sws_tasker
    build: ./tasker
    command: python /tasker/app/main.py --name task
    env_file:
      - .env
    volumes:
      - ./tasker:/tasker
      - /var/log/sws/tasker.log:/var/log/sws/tasker.log
    depends_on:
      - redis
    restart: always

volumes:
  postgres-data:
